{
  "Mint Many NFTs with limited supplies": {
    "prefix": "editionMintBatchTo",
    "body": [
      "// Address of the wallet you want to mint the NFT to",
      "const toAddress = \"{{wallet_address}}\"",
      "",
      "// Custom metadata and supplies of your NFTs",
      "const metadataWithSupply = [{",
      "  supply: 50, // The number of this NFT you want to mint",
      "  metadata: {",
      "    name: \"Cool NFT #1\",",
      "    description: \"This is a cool NFT\",",
      "    image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file",
      "  },",
      "}, {",
      "  supply: 100,",
      "  metadata: {",
      "    name: \"Cool NFT #2\",",
      "    description: \"This is a cool NFT\",",
      "    image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file",
      "  },",
      "}];",
      "",
      "const tx = await contract.mintBatchTo(toAddress, metadataWithSupply);",
      "const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs",
      "const firstTokenId = tx[0].id; // token id of the first minted NFT",
      "const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT"
    ],
    "description": "Mint Many NFTs with limited supplies"
  },
  "Mint an NFT with a limited supply": {
    "prefix": "editionMintTo",
    "body": [
      "// Address of the wallet you want to mint the NFT to",
      "const toAddress = \"{{wallet_address}}\"",
      "",
      "// Custom metadata of the NFT, note that you can fully customize this metadata with other properties.",
      "const metadata = {",
      "  name: \"Cool NFT\",",
      "  description: \"This is a cool NFT\",",
      "  image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file",
      "}",
      "",
      "const metadataWithSupply = {",
      "  metadata,",
      "  supply: 1000, // The number of this NFT you want to mint",
      "}",
      "",
      "const tx = await contract.mintTo(toAddress, metadataWithSupply);",
      "const receipt = tx.receipt; // the transaction receipt",
      "const tokenId = tx.id; // the id of the NFT minted",
      "const nft = await tx.data(); // (optional) fetch details of minted NFT"
    ],
    "description": "Mint an NFT with a limited supply"
  },
  "Get NFT Balance": {
    "prefix": "editionBalanceOf",
    "body": [
      "// Address of the wallet to check NFT balance",
      "const address = \"{{wallet_address}}\";",
      "",
      "const balance = await contract.balanceOf(address);",
      "console.log(balance);"
    ],
    "description": "Get NFT Balance"
  },
  "Get a single NFT Metadata": {
    "prefix": "editionGet",
    "body": ["const nft = await contract.get(\"0\");", "console.log(nft);"],
    "description": "Get a single NFT Metadata"
  },
  "Get All NFTs": {
    "prefix": "editionGetAll",
    "body": ["const nfts = await contract.getAll();", "console.log(nfts);"],
    "description": "Get All NFTs"
  },
  "Get Owned NFTs": {
    "prefix": "editionGetOwned",
    "body": [
      "// Address of the wallet to get the NFTs of",
      "const address = \"{{wallet_address}}\";",
      "const nfts = await contract.getOwned(address);",
      "console.log(nfts);"
    ],
    "description": "Get Owned NFTs"
  },
  "Transfer a single NFT": {
    "prefix": "editionTransfer",
    "body": [
      "// Address of the wallet you want to send the NFT to",
      "const toAddress = \"{{wallet_address}}\";",
      "",
      "// The token ID of the NFT you want to send",
      "const tokenId = \"0\";",
      "// How many copies of the NFTs to transfer",
      "const amount = 3;",
      "",
      "await contract.transfer(toAddress, tokenId, amount);"
    ],
    "description": "Transfer a single NFT"
  }
}
